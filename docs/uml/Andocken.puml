@startuml
!pragma teoz true
title Andocken & Quadrat-Entfernung (core)

actor Player as P
participant GameStage as GST
participant GameService as Service
participant Shape as Shape
participant RotorShape as Rotor
collections Cubes as C

activate GST
GST -> Service : move()/rotate()
activate Service #FFFFFF80
note over Service
    siehe [Eingabe & Bewegung]
endnote
Service --> GST : Kollisionsereignis
Service -> Service : startLockDelayTimer()
note over Service
    Lock Delay: Shape weiterhin beweglich
    Reset durch gültige Moves (max 7 Resets)
endnote
alt user interrupted
    P -->o GST : key pressed
    & GST -> Service : move()/rotate()
    activate Service
    Service -> Shape : canMove()/canRotate()
    activate Shape
    alt gültige Bewegung
        Shape --> Service : true
        Service -> Service : handleLockDelayReset()
    else ungültig
        Shape --> Service : false
        deactivate Shape
    end
else Timer abgelaufen
    Service -> Service : attachActiveShapeToRotor()
    Service -> Rotor : removeSquaresAsync(onDone)
    activate Rotor
    note over Rotor
        solange Quadrate vorhanden:
        - Perimeter voll? -> entfernen, zählen
        - sonst bei Kettenfund: moveCubesIn(consecutive)
        - Radius neu prüfen
    endnote
    Rotor --> Service : SquaresResult(cubesDestroyed, squaresDestroyed)
    deactivate Rotor
    Service -> Service : updateScore(cubes*squares)
    Service -> Service : squares += squaresDestroyed; updateLevel()
    Service -> Service : scheduleNextStep()
end

deactivate GST
@enduml
