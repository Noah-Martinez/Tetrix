@startuml
title Bausteinsicht: Tetrix (core)

package "Tetrix (core)" {
  component "Game" as Game
  component "AssetManager" as AM
  component "InputMultiplexer" as IM
  component "Skin (Scene2DSkin)" as Skin

  component "LoadingScreen" as LS
  component "MainMenuScreen" as MMS
  component "OptionMenuScreen" as OMS
  component "ScoreboardScreen" as SBS
  component "GameScreen" as GScreen
  component "GameOverScreen" as GOS

  component "GameStage" as GST
  component "GameViewBuilder" as GVB
  component "GamePauseViewBuilder" as GPVB
  component "MainMenuViewBuilder" as MMVB
  component "OptionMenuViewBuilder" as OMVB
  component "ScoreboardViewBuilder" as SBVB
  component "GameOverViewBuilder" as GOVB

  component "GameService" as Service
  component "GameInputController" as GIC
  component "KeyHoldSystem" as KHS

  component "Shape" as Shape
  component "RotorShape" as Rotor
  component "Cube" as Cube

  package "scoreboard" {
    interface "ScoreboardRepository" as SR
    component "ScoreboardCsvService" as SC
    component "ScoreboardDatabaseService" as SD
    component "ScoreboardService (Factory)" as SF
  }

  component "ConfigManager" as Cfg
  component "PlayerConfig" as PCfg
}

Game --> AM
Game --> IM
Game --> Skin
Game --> LS
Game --> MMS
Game --> OMS
Game --> SBS
Game --> GScreen
Game --> GOS

GScreen --> GST
GScreen --> Service
GScreen --> GVB
GScreen --> GPVB

MMS --> MMVB
MMS --> SR : getHighScore()

OMS --> OMVB
OMS --> Cfg
Cfg --> PCfg

SBS --> SBVB
SBS --> SR : getAllScores()

GOS --> GOVB
GOS --> SR : addScore()/getGameOverScores()

GST --> GIC
GST --> KHS
Service --> GST
Service --> Shape
Rotor ..> Shape : extends
Shape --> Cube

SF --> SD
SF --> SC
SD ..|> SR
SC ..|> SR
@enduml
